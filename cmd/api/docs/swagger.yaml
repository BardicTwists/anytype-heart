basePath: /v1
definitions:
  api.Attachment:
    properties:
      target:
        description: Identifier for the attachment object
        type: string
      type:
        description: Type of attachment
        type: string
    type: object
  api.Block:
    properties:
      align:
        type: string
      background_color:
        type: string
      children_ids:
        items:
          type: string
        type: array
      file:
        $ref: '#/definitions/api.File'
      id:
        type: string
      layout:
        $ref: '#/definitions/api.Layout'
      text:
        $ref: '#/definitions/api.Text'
      vertical_align:
        type: string
    type: object
  api.ChatMessage:
    properties:
      attachments:
        description: Attachments slice
        items:
          $ref: '#/definitions/api.Attachment'
        type: array
      chat_message:
        type: string
      created_at:
        type: integer
      creator:
        description: Identifier for the message creator
        type: string
      id:
        description: Unique message identifier
        type: string
      message:
        allOf:
        - $ref: '#/definitions/api.MessageContent'
        description: Message content
      modified_at:
        type: integer
      order_id:
        description: Used for subscriptions
        type: string
      reactions:
        allOf:
        - $ref: '#/definitions/api.Reactions'
        description: Reactions to the message
      reply_to_message_id:
        description: Identifier for the message being replied to
        type: string
    type: object
  api.Detail:
    properties:
      details:
        additionalProperties: true
        type: object
      id:
        type: string
    type: object
  api.File:
    properties:
      added_at:
        type: integer
      hash:
        type: string
      mime:
        type: string
      name:
        type: string
      size:
        type: integer
      state:
        type: integer
      style:
        type: integer
      target_object_id:
        type: string
      type:
        type: string
    type: object
  api.IdentityList:
    properties:
      ids:
        description: List of user IDs
        items:
          type: string
        type: array
    type: object
  api.Layout:
    properties:
      style:
        type: string
    type: object
  api.MessageContent:
    properties:
      marks:
        description: List of marks applied to the text
        items:
          type: string
        type: array
      style:
        description: The style/type of the message part
        type: string
      text:
        description: The text content of the message part
        type: string
    type: object
  api.NotFoundError:
    properties:
      error:
        properties:
          message:
            type: string
        type: object
    type: object
  api.Object:
    properties:
      blocks:
        items:
          $ref: '#/definitions/api.Block'
        type: array
      details:
        items:
          $ref: '#/definitions/api.Detail'
        type: array
      icon_emoji:
        example: "\U0001F4C4"
        type: string
      id:
        example: bafyreie6n5l5nkbjal37su54cha4coy7qzuhrnajluzv5qd5jvtsrxkequ
        type: string
      name:
        example: Object Name
        type: string
      object_type:
        example: Page
        type: string
      root_id:
        type: string
      space_id:
        example: bafyreigyfkt6rbv24sbv5aq2hko3bhmv5xxlf22b4bypdu6j7hnphm3psq.23me69r569oi1
        type: string
      type:
        example: object
        type: string
    type: object
  api.ObjectTemplate:
    properties:
      icon_emoji:
        example: "\U0001F4C4"
        type: string
      id:
        example: bafyreictrp3obmnf6dwejy5o4p7bderaaia4bdg2psxbfzf44yya5uutge
        type: string
      name:
        example: Object Template Name
        type: string
      type:
        example: object_template
        type: string
    type: object
  api.ObjectType:
    properties:
      icon_emoji:
        example: "\U0001F4C4"
        type: string
      id:
        example: bafyreigyb6l5szohs32ts26ku2j42yd65e6hqy2u3gtzgdwqv6hzftsetu
        type: string
      name:
        example: Page
        type: string
      type:
        example: object_type
        type: string
      unique_key:
        example: ot-page
        type: string
    type: object
  api.Reactions:
    properties:
      reactions:
        additionalProperties:
          $ref: '#/definitions/api.IdentityList'
        description: Map of emoji to list of user IDs
        type: object
    type: object
  api.ServerError:
    properties:
      error:
        properties:
          message:
            type: string
        type: object
    type: object
  api.Space:
    properties:
      account_space_id:
        example: bafyreihpd2knon5wbljhtfeg3fcqtg3i2pomhhnigui6lrjmzcjzep7gcy.23me69r569oi1
        type: string
      archive_object_id:
        example: bafyreialsgoyflf3etjm3parzurivyaukzivwortf32b4twnlwpwocsrri
        type: string
      device_id:
        example: 12D3KooWGZMJ4kQVyQVXaj7gJPZr3RZ2nvd9M2Eq2pprEoPih9WF
        type: string
      home_object_id:
        example: bafyreie4qcl3wczb4cw5hrfyycikhjyh6oljdis3ewqrk5boaav3sbwqya
        type: string
      icon:
        example: data:image/png;base64, <base64-encoded-image>
        type: string
      id:
        example: bafyreigyfkt6rbv24sbv5aq2hko3bhmv5xxlf22b4bypdu6j7hnphm3psq.23me69r569oi1
        type: string
      marketplace_workspace_id:
        example: _anytype_marketplace
        type: string
      name:
        example: Space Name
        type: string
      network_id:
        example: N83gJpVd9MuNRZAuJLZ7LiMntTThhPc6DtzWWVjb1M3PouVU
        type: string
      profile_object_id:
        example: bafyreiaxhwreshjqwndpwtdsu4mtihaqhhmlygqnyqpfyfwlqfq3rm3gw4
        type: string
      space_view_id:
        example: bafyreigzv3vq7qwlrsin6njoduq727ssnhwd6bgyfj6nm4hv3pxoc2rxhy
        type: string
      tech_space_id:
        example: bafyreif4xuwncrjl6jajt4zrrfnylpki476nv2w64yf42ovt7gia7oypii.23me69r569oi1
        type: string
      timezone:
        example: ""
        type: string
      type:
        example: space
        type: string
      widgets_id:
        example: bafyreialj7pceh53mifm5dixlho47ke4qjmsn2uh4wsjf7xq2pnlo5xfva
        type: string
      workspace_object_id:
        example: bafyreiapey2g6e6za4zfxvlgwdy4hbbfu676gmwrhnqvjbxvrchr7elr3y
        type: string
    type: object
  api.SpaceMember:
    properties:
      global_name:
        example: john.any
        type: string
      icon:
        example: data:image/png;base64, <base64-encoded-image>
        type: string
      id:
        example: _participant_bafyreigyfkt6rbv24sbv5aq2hko1bhmv5xxlf22b4bypdu6j7hnphm3psq_23me69r569oi1_AAjEaEwPF4nkEh9AWkqEnzcQ8HziBB4ETjiTpvRCQvWnSMDZ
        type: string
      identity:
        example: AAjEaEwPF4nkEh7AWkqEnzcQ8HziGB4ETjiTpvRCQvWnSMDZ
        type: string
      name:
        example: John Doe
        type: string
      role:
        example: Owner
        type: string
      type:
        example: space_member
        type: string
    type: object
  api.Text:
    properties:
      checked:
        type: boolean
      color:
        type: string
      icon_emoji:
        type: string
      icon_image:
        type: string
      style:
        type: string
      text:
        type: string
    type: object
  api.UnauthorizedError:
    properties:
      error:
        properties:
          message:
            type: string
        type: object
    type: object
  api.ValidationError:
    properties:
      error:
        properties:
          message:
            type: string
        type: object
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:31009
info:
  contact:
    email: support@anytype.io
    name: Anytype Support
    url: https://anytype.io/contact
  description: This API allows interaction with Anytype resources such as spaces,
    objects, and object types.
  license:
    name: Any Source Available License 1.0
    url: https://github.com/anyproto/anytype-ts/blob/main/LICENSE.md
  termsOfService: https://anytype.io/terms_of_use
  title: Anytype API
  version: "1.0"
paths:
  /auth/displayCode:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: string
        "502":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ServerError'
      summary: Open a modal window with a code in Anytype Desktop app
      tags:
      - auth
  /auth/token:
    get:
      consumes:
      - application/json
      parameters:
      - description: The code retrieved from Anytype Desktop app
        in: query
        name: code
        required: true
        type: string
      - description: The challenge ID
        in: query
        name: challengeId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Access and refresh tokens
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/api.ValidationError'
        "502":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ServerError'
      summary: Retrieve an authentication token using a code
      tags:
      - auth
  /objects:
    get:
      consumes:
      - application/json
      parameters:
      - description: The search term to filter objects by name
        in: query
        name: search
        type: string
      - description: Specify object type for search
        in: query
        name: object_type
        type: string
      - description: The number of items to skip before starting to collect the result
          set
        in: query
        name: offset
        type: integer
      - default: 100
        description: The number of items to return
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of objects
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/api.Object'
              type: array
            type: object
        "403":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.UnauthorizedError'
        "502":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ServerError'
      summary: Search and retrieve objects across all the spaces
      tags:
      - search
  /spaces:
    get:
      consumes:
      - application/json
      parameters:
      - description: The number of items to skip before starting to collect the result
          set
        in: query
        name: offset
        type: integer
      - default: 100
        description: The number of items to return
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of spaces
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/api.Space'
              type: array
            type: object
        "403":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.UnauthorizedError'
        "502":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ServerError'
      summary: Retrieve a list of spaces
      tags:
      - spaces
    post:
      consumes:
      - application/json
      parameters:
      - description: Space Name
        in: body
        name: name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Space created successfully
          schema:
            $ref: '#/definitions/api.Space'
        "403":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.UnauthorizedError'
        "502":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ServerError'
      summary: Create a new Space
      tags:
      - spaces
  /spaces/{space_id}/members:
    get:
      consumes:
      - application/json
      parameters:
      - description: The ID of the space
        in: path
        name: space_id
        required: true
        type: string
      - description: The number of items to skip before starting to collect the result
          set
        in: query
        name: offset
        type: integer
      - default: 100
        description: The number of items to return
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of members
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/api.SpaceMember'
              type: array
            type: object
        "403":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.UnauthorizedError'
        "404":
          description: Resource not found
          schema:
            $ref: '#/definitions/api.NotFoundError'
        "502":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ServerError'
      summary: Retrieve a list of members for the specified Space
      tags:
      - spaces
  /spaces/{space_id}/objectTypes:
    get:
      consumes:
      - application/json
      parameters:
      - description: The ID of the space
        in: path
        name: space_id
        required: true
        type: string
      - description: The number of items to skip before starting to collect the result
          set
        in: query
        name: offset
        type: integer
      - default: 100
        description: The number of items to return
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of object types
          schema:
            additionalProperties:
              $ref: '#/definitions/api.ObjectType'
            type: object
        "403":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.UnauthorizedError'
        "404":
          description: Resource not found
          schema:
            $ref: '#/definitions/api.NotFoundError'
        "502":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ServerError'
      summary: Retrieve object types in a specific space
      tags:
      - types_and_templates
  /spaces/{space_id}/objectTypes/{typeId}/templates:
    get:
      consumes:
      - application/json
      parameters:
      - description: The ID of the space
        in: path
        name: space_id
        required: true
        type: string
      - description: The ID of the object type
        in: path
        name: typeId
        required: true
        type: string
      - description: The number of items to skip before starting to collect the result
          set
        in: query
        name: offset
        type: integer
      - default: 100
        description: The number of items to return
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of templates
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/api.ObjectTemplate'
              type: array
            type: object
        "403":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.UnauthorizedError'
        "404":
          description: Resource not found
          schema:
            $ref: '#/definitions/api.NotFoundError'
        "502":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ServerError'
      summary: Retrieve a list of templates for a specific object type in a space
      tags:
      - types_and_templates
  /spaces/{space_id}/objects:
    get:
      consumes:
      - application/json
      parameters:
      - description: The ID of the space
        in: path
        name: space_id
        required: true
        type: string
      - description: The number of items to skip before starting to collect the result
          set
        in: query
        name: offset
        type: integer
      - default: 100
        description: The number of items to return
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of objects
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/api.Object'
              type: array
            type: object
        "403":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.UnauthorizedError'
        "404":
          description: Resource not found
          schema:
            $ref: '#/definitions/api.NotFoundError'
        "502":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ServerError'
      summary: Retrieve objects in a specific space
      tags:
      - space_objects
    post:
      consumes:
      - application/json
      parameters:
      - description: The ID of the space
        in: path
        name: space_id
        required: true
        type: string
      - description: Object details (e.g., name)
        in: body
        name: object
        required: true
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: The created object
          schema:
            $ref: '#/definitions/api.Object'
        "403":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.UnauthorizedError'
        "502":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ServerError'
      summary: Create a new object in a specific space
      tags:
      - space_objects
  /spaces/{space_id}/objects/{object_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: The ID of the space
        in: path
        name: space_id
        required: true
        type: string
      - description: The ID of the object
        in: path
        name: object_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The requested object
          schema:
            $ref: '#/definitions/api.Object'
        "403":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.UnauthorizedError'
        "404":
          description: Resource not found
          schema:
            $ref: '#/definitions/api.NotFoundError'
        "502":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ServerError'
      summary: Retrieve a specific object in a space
      tags:
      - space_objects
    put:
      consumes:
      - application/json
      parameters:
      - description: The ID of the space
        in: path
        name: space_id
        required: true
        type: string
      - description: The ID of the object
        in: path
        name: object_id
        required: true
        type: string
      - description: The updated object details
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/api.Object'
      produces:
      - application/json
      responses:
        "200":
          description: The updated object
          schema:
            $ref: '#/definitions/api.Object'
        "403":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.UnauthorizedError'
        "404":
          description: Resource not found
          schema:
            $ref: '#/definitions/api.NotFoundError'
        "502":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ServerError'
      summary: Update an existing object in a specific space
      tags:
      - space_objects
  /v1/spaces/{space_id}/chat/messages:
    get:
      consumes:
      - application/json
      parameters:
      - description: The ID of the space
        in: path
        name: space_id
        required: true
        type: string
      - description: The number of items to skip before starting to collect the result
          set
        in: query
        name: offset
        type: integer
      - default: 100
        description: The number of items to return
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of chat messages
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/api.ChatMessage'
              type: array
            type: object
        "502":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ServerError'
      summary: Retrieve last chat messages
      tags:
      - chat
    post:
      consumes:
      - application/json
      parameters:
      - description: The ID of the space
        in: path
        name: space_id
        required: true
        type: string
      - description: Chat message
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/api.ChatMessage'
      produces:
      - application/json
      responses:
        "201":
          description: Created chat message
          schema:
            $ref: '#/definitions/api.ChatMessage'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/api.ValidationError'
        "502":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ServerError'
      summary: Add a new chat message
      tags:
      - chat
  /v1/spaces/{space_id}/chat/messages/{message_id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: The ID of the space
        in: path
        name: space_id
        required: true
        type: string
      - description: Message ID
        in: path
        name: message_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Message deleted successfully
        "404":
          description: Message not found
          schema:
            $ref: '#/definitions/api.NotFoundError'
        "502":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ServerError'
      summary: Delete a chat message
      tags:
      - chat
    get:
      consumes:
      - application/json
      parameters:
      - description: The ID of the space
        in: path
        name: space_id
        required: true
        type: string
      - description: Message ID
        in: path
        name: message_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Chat message
          schema:
            $ref: '#/definitions/api.ChatMessage'
        "404":
          description: Message not found
          schema:
            $ref: '#/definitions/api.NotFoundError'
        "502":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ServerError'
      summary: Retrieve a specific chat message
      tags:
      - chat
    put:
      consumes:
      - application/json
      parameters:
      - description: The ID of the space
        in: path
        name: space_id
        required: true
        type: string
      - description: Message ID
        in: path
        name: message_id
        required: true
        type: string
      - description: Chat message
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/api.ChatMessage'
      produces:
      - application/json
      responses:
        "200":
          description: Updated chat message
          schema:
            $ref: '#/definitions/api.ChatMessage'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/api.ValidationError'
        "404":
          description: Message not found
          schema:
            $ref: '#/definitions/api.NotFoundError'
        "502":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ServerError'
      summary: Update an existing chat message
      tags:
      - chat
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
