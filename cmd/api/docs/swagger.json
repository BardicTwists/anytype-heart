{
    "swagger": "2.0",
    "info": {
        "description": "This API allows interaction with Anytype resources such as spaces, objects, and object types.",
        "title": "Anytype API",
        "termsOfService": "https://anytype.io/terms_of_use",
        "contact": {
            "name": "Anytype Support",
            "url": "https://anytype.io/contact",
            "email": "support@anytype.io"
        },
        "license": {
            "name": "Any Source Available License 1.0",
            "url": "https://github.com/anyproto/anytype-ts/blob/main/LICENSE.md"
        },
        "version": "1.0"
    },
    "host": "localhost:31009",
    "basePath": "/v1",
    "paths": {
        "/auth/displayCode": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Open a modal window with a code in Anytype Desktop app",
                "responses": {
                    "200": {
                        "description": "Challenge ID",
                        "schema": {
                            "$ref": "#/definitions/api.AuthDisplayCodeResponse"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/auth/token": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Retrieve an authentication token using a code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The code retrieved from Anytype Desktop app",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The challenge ID",
                        "name": "challenge_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication token",
                        "schema": {
                            "$ref": "#/definitions/api.AuthTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/api.ValidationError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search and retrieve objects across all the spaces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The search term to filter objects by name",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Specify object type for search",
                        "name": "object_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The number of items to skip before starting to collect the result set",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of objects",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.Object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spaces"
                ],
                "summary": "Retrieve a list of spaces",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The number of items to skip before starting to collect the result set",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of spaces",
                        "schema": {
                            "$ref": "#/definitions/api.PaginatedResponse-api_Space"
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spaces"
                ],
                "summary": "Create a new Space",
                "parameters": [
                    {
                        "description": "Space Name",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Space created successfully",
                        "schema": {
                            "$ref": "#/definitions/api.CreateSpaceResponse"
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/members": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spaces"
                ],
                "summary": "Retrieve a list of members for the specified Space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The number of items to skip before starting to collect the result set",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of members",
                        "schema": {
                            "$ref": "#/definitions/api.PaginatedResponse-api_Member"
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/objectTypes": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "types_and_templates"
                ],
                "summary": "Retrieve object types in a specific space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The number of items to skip before starting to collect the result set",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of object types",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/api.ObjectType"
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/objectTypes/{typeId}/templates": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "types_and_templates"
                ],
                "summary": "Retrieve a list of templates for a specific object type in a space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The ID of the object type",
                        "name": "typeId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The number of items to skip before starting to collect the result set",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of templates",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.ObjectTemplate"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/objects": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "space_objects"
                ],
                "summary": "Retrieve objects in a specific space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The number of items to skip before starting to collect the result set",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of objects",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.Object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "space_objects"
                ],
                "summary": "Create a new object in a specific space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object details (e.g., name)",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The created object",
                        "schema": {
                            "$ref": "#/definitions/api.Object"
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/objects/{object_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "space_objects"
                ],
                "summary": "Retrieve a specific object in a space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The ID of the object",
                        "name": "object_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested object",
                        "schema": {
                            "$ref": "#/definitions/api.Object"
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "space_objects"
                ],
                "summary": "Update an existing object in a specific space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The ID of the object",
                        "name": "object_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The updated object details",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The updated object",
                        "schema": {
                            "$ref": "#/definitions/api.Object"
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/v1/spaces/{space_id}/chat/messages": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Retrieve last chat messages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The number of items to skip before starting to collect the result set",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of chat messages",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.ChatMessage"
                                }
                            }
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Add a new chat message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Chat message",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ChatMessage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created chat message",
                        "schema": {
                            "$ref": "#/definitions/api.ChatMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/api.ValidationError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/v1/spaces/{space_id}/chat/messages/{message_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Retrieve a specific chat message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Message ID",
                        "name": "message_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chat message",
                        "schema": {
                            "$ref": "#/definitions/api.ChatMessage"
                        }
                    },
                    "404": {
                        "description": "Message not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Update an existing chat message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Message ID",
                        "name": "message_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Chat message",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ChatMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated chat message",
                        "schema": {
                            "$ref": "#/definitions/api.ChatMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/api.ValidationError"
                        }
                    },
                    "404": {
                        "description": "Message not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Delete a chat message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Message ID",
                        "name": "message_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Message deleted successfully"
                    },
                    "404": {
                        "description": "Message not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Attachment": {
            "type": "object",
            "properties": {
                "target": {
                    "description": "Identifier for the attachment object",
                    "type": "string"
                },
                "type": {
                    "description": "Type of attachment",
                    "type": "string"
                }
            }
        },
        "api.AuthDisplayCodeResponse": {
            "type": "object",
            "properties": {
                "challenge_id": {
                    "type": "string",
                    "example": "67647f5ecda913e9a2e11b26"
                }
            }
        },
        "api.AuthTokenResponse": {
            "type": "object",
            "properties": {
                "app_key": {
                    "type": "string",
                    "example": ""
                },
                "session_token": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "api.Block": {
            "type": "object",
            "properties": {
                "align": {
                    "type": "string"
                },
                "background_color": {
                    "type": "string"
                },
                "children_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "file": {
                    "$ref": "#/definitions/api.File"
                },
                "id": {
                    "type": "string"
                },
                "text": {
                    "$ref": "#/definitions/api.Text"
                },
                "vertical_align": {
                    "type": "string"
                }
            }
        },
        "api.ChatMessage": {
            "type": "object",
            "properties": {
                "attachments": {
                    "description": "Attachments slice",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Attachment"
                    }
                },
                "chat_message": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "creator": {
                    "description": "Identifier for the message creator",
                    "type": "string"
                },
                "id": {
                    "description": "Unique message identifier",
                    "type": "string"
                },
                "message": {
                    "description": "Message content",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.MessageContent"
                        }
                    ]
                },
                "modified_at": {
                    "type": "integer"
                },
                "order_id": {
                    "description": "Used for subscriptions",
                    "type": "string"
                },
                "reactions": {
                    "description": "Reactions to the message",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.Reactions"
                        }
                    ]
                },
                "reply_to_message_id": {
                    "description": "Identifier for the message being replied to",
                    "type": "string"
                }
            }
        },
        "api.CreateSpaceResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Space Name"
                },
                "space_id": {
                    "type": "string",
                    "example": "bafyreigyfkt6rbv24sbv5aq2hko3bhmv5xxlf22b4bypdu6j7hnphm3psq.23me69r569oi1"
                }
            }
        },
        "api.Detail": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "additionalProperties": true
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "api.File": {
            "type": "object",
            "properties": {
                "added_at": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "mime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "style": {
                    "type": "string"
                },
                "target_object_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.IdentityList": {
            "type": "object",
            "properties": {
                "ids": {
                    "description": "List of user IDs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.Member": {
            "type": "object",
            "properties": {
                "global_name": {
                    "type": "string",
                    "example": "john.any"
                },
                "icon": {
                    "type": "string",
                    "example": "http://127.0.0.1:31006/image/bafybeieptz5hvcy6txplcvphjbbh5yjc2zqhmihs3owkh5oab4ezauzqay?width=100"
                },
                "id": {
                    "type": "string",
                    "example": "_participant_bafyreigyfkt6rbv24sbv5aq2hko1bhmv5xxlf22b4bypdu6j7hnphm3psq_23me69r569oi1_AAjEaEwPF4nkEh9AWkqEnzcQ8HziBB4ETjiTpvRCQvWnSMDZ"
                },
                "identity": {
                    "type": "string",
                    "example": "AAjEaEwPF4nkEh7AWkqEnzcQ8HziGB4ETjiTpvRCQvWnSMDZ"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "role": {
                    "type": "string",
                    "example": "Owner"
                },
                "type": {
                    "type": "string",
                    "example": "member"
                }
            }
        },
        "api.MessageContent": {
            "type": "object",
            "properties": {
                "marks": {
                    "description": "List of marks applied to the text",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "style": {
                    "description": "The style/type of the message part",
                    "type": "string"
                },
                "text": {
                    "description": "The text content of the message part",
                    "type": "string"
                }
            }
        },
        "api.NotFoundError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "api.Object": {
            "type": "object",
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Block"
                    }
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Detail"
                    }
                },
                "icon": {
                    "type": "string",
                    "example": "📄"
                },
                "id": {
                    "type": "string",
                    "example": "bafyreie6n5l5nkbjal37su54cha4coy7qzuhrnajluzv5qd5jvtsrxkequ"
                },
                "name": {
                    "type": "string",
                    "example": "Object Name"
                },
                "object_type": {
                    "type": "string",
                    "example": "Page"
                },
                "root_id": {
                    "type": "string"
                },
                "space_id": {
                    "type": "string",
                    "example": "bafyreigyfkt6rbv24sbv5aq2hko3bhmv5xxlf22b4bypdu6j7hnphm3psq.23me69r569oi1"
                },
                "type": {
                    "type": "string",
                    "example": "object"
                }
            }
        },
        "api.ObjectTemplate": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string",
                    "example": "📄"
                },
                "id": {
                    "type": "string",
                    "example": "bafyreictrp3obmnf6dwejy5o4p7bderaaia4bdg2psxbfzf44yya5uutge"
                },
                "name": {
                    "type": "string",
                    "example": "Object Template Name"
                },
                "type": {
                    "type": "string",
                    "example": "object_template"
                }
            }
        },
        "api.ObjectType": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string",
                    "example": "📄"
                },
                "id": {
                    "type": "string",
                    "example": "bafyreigyb6l5szohs32ts26ku2j42yd65e6hqy2u3gtzgdwqv6hzftsetu"
                },
                "name": {
                    "type": "string",
                    "example": "Page"
                },
                "type": {
                    "type": "string",
                    "example": "object_type"
                },
                "unique_key": {
                    "type": "string",
                    "example": "ot-page"
                }
            }
        },
        "api.PaginatedResponse-api_Member": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Member"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/api.PaginationMeta"
                }
            }
        },
        "api.PaginatedResponse-api_Space": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Space"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/api.PaginationMeta"
                }
            }
        },
        "api.PaginationMeta": {
            "type": "object",
            "properties": {
                "has_more": {
                    "description": "whether there are more items available",
                    "type": "boolean",
                    "example": true
                },
                "limit": {
                    "description": "the current limit",
                    "type": "integer",
                    "example": 100
                },
                "offset": {
                    "description": "the current offset",
                    "type": "integer",
                    "example": 0
                },
                "total": {
                    "description": "the total number of items available on that endpoint",
                    "type": "integer",
                    "example": 1024
                }
            }
        },
        "api.Reactions": {
            "type": "object",
            "properties": {
                "reactions": {
                    "description": "Map of emoji to list of user IDs",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/api.IdentityList"
                    }
                }
            }
        },
        "api.ServerError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "api.Space": {
            "type": "object",
            "properties": {
                "account_space_id": {
                    "type": "string",
                    "example": "bafyreihpd2knon5wbljhtfeg3fcqtg3i2pomhhnigui6lrjmzcjzep7gcy.23me69r569oi1"
                },
                "archive_object_id": {
                    "type": "string",
                    "example": "bafyreialsgoyflf3etjm3parzurivyaukzivwortf32b4twnlwpwocsrri"
                },
                "device_id": {
                    "type": "string",
                    "example": "12D3KooWGZMJ4kQVyQVXaj7gJPZr3RZ2nvd9M2Eq2pprEoPih9WF"
                },
                "home_object_id": {
                    "type": "string",
                    "example": "bafyreie4qcl3wczb4cw5hrfyycikhjyh6oljdis3ewqrk5boaav3sbwqya"
                },
                "icon": {
                    "type": "string",
                    "example": "http://127.0.0.1:31006/image/bafybeieptz5hvcy6txplcvphjbbh5yjc2zqhmihs3owkh5oab4ezauzqay?width=100"
                },
                "id": {
                    "type": "string",
                    "example": "bafyreigyfkt6rbv24sbv5aq2hko3bhmv5xxlf22b4bypdu6j7hnphm3psq.23me69r569oi1"
                },
                "marketplace_workspace_id": {
                    "type": "string",
                    "example": "_anytype_marketplace"
                },
                "name": {
                    "type": "string",
                    "example": "Space Name"
                },
                "network_id": {
                    "type": "string",
                    "example": "N83gJpVd9MuNRZAuJLZ7LiMntTThhPc6DtzWWVjb1M3PouVU"
                },
                "profile_object_id": {
                    "type": "string",
                    "example": "bafyreiaxhwreshjqwndpwtdsu4mtihaqhhmlygqnyqpfyfwlqfq3rm3gw4"
                },
                "space_view_id": {
                    "type": "string",
                    "example": "bafyreigzv3vq7qwlrsin6njoduq727ssnhwd6bgyfj6nm4hv3pxoc2rxhy"
                },
                "tech_space_id": {
                    "type": "string",
                    "example": "bafyreif4xuwncrjl6jajt4zrrfnylpki476nv2w64yf42ovt7gia7oypii.23me69r569oi1"
                },
                "timezone": {
                    "type": "string",
                    "example": ""
                },
                "type": {
                    "type": "string",
                    "example": "space"
                },
                "widgets_id": {
                    "type": "string",
                    "example": "bafyreialj7pceh53mifm5dixlho47ke4qjmsn2uh4wsjf7xq2pnlo5xfva"
                },
                "workspace_object_id": {
                    "type": "string",
                    "example": "bafyreiapey2g6e6za4zfxvlgwdy4hbbfu676gmwrhnqvjbxvrchr7elr3y"
                }
            }
        },
        "api.Text": {
            "type": "object",
            "properties": {
                "checked": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "style": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "api.UnauthorizedError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "api.ValidationError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}