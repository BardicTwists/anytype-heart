// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://anytype.io/terms_of_use",
        "contact": {
            "name": "Anytype Support",
            "url": "https://anytype.io/contact",
            "email": "support@anytype.io"
        },
        "license": {
            "name": "Any Source Available License 1.0",
            "url": "https://github.com/anyproto/anytype-ts/blob/main/LICENSE.md"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/displayCode": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Open a modal window with a code in Anytype Desktop app",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/auth/token": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Retrieve an authentication token using a code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The code retrieved from Anytype Desktop app",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access and refresh tokens",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/api.ValidationError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/objects": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search and retrieve objects across all the spaces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The search term to filter objects by name",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Specify object type for search",
                        "name": "object_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The number of items to skip before starting to collect the result set",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of objects",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.Object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spaces"
                ],
                "summary": "Retrieve a list of spaces",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The number of items to skip before starting to collect the result set",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of spaces",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.Space"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spaces"
                ],
                "summary": "Create a new Space",
                "parameters": [
                    {
                        "description": "Space Name",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Space created successfully",
                        "schema": {
                            "$ref": "#/definitions/api.Space"
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/members": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "spaces"
                ],
                "summary": "Retrieve a list of members for the specified Space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of members",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.SpaceMember"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/objectTypes": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "types_and_templates"
                ],
                "summary": "Retrieve object types in a specific space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The number of items to skip before starting to collect the result set",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of object types",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/api.ObjectType"
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/objectTypes/{typeId}/templates": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "types_and_templates"
                ],
                "summary": "Retrieve a list of templates for a specific object type in a space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The ID of the object type",
                        "name": "typeId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of templates",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.ObjectTemplate"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/objects": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "space_objects"
                ],
                "summary": "Retrieve objects in a specific space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The number of items to skip before starting to collect the result set",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "The number of items to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of objects",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/api.Object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "space_objects"
                ],
                "summary": "Create a new object in a specific space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Object details (e.g., name)",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The created object",
                        "schema": {
                            "$ref": "#/definitions/api.Object"
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}/objects/{object_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "space_objects"
                ],
                "summary": "Retrieve a specific object in a space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The ID of the object",
                        "name": "object_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested object",
                        "schema": {
                            "$ref": "#/definitions/api.Object"
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "space_objects"
                ],
                "summary": "Update an existing object in a specific space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the space",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The ID of the object",
                        "name": "object_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The updated object details",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The updated object",
                        "schema": {
                            "$ref": "#/definitions/api.Object"
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.UnauthorizedError"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/api.NotFoundError"
                        }
                    },
                    "502": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ServerError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Block": {
            "type": "object",
            "properties": {
                "align": {
                    "type": "string"
                },
                "background_color": {
                    "type": "string"
                },
                "children_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "file": {
                    "$ref": "#/definitions/api.File"
                },
                "id": {
                    "type": "string"
                },
                "layout": {
                    "$ref": "#/definitions/api.Layout"
                },
                "text": {
                    "$ref": "#/definitions/api.Text"
                },
                "vertical_align": {
                    "type": "string"
                }
            }
        },
        "api.Detail": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "additionalProperties": true
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "api.File": {
            "type": "object",
            "properties": {
                "added_at": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "mime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "state": {
                    "type": "integer"
                },
                "style": {
                    "type": "integer"
                },
                "target_object_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.Layout": {
            "type": "object",
            "properties": {
                "style": {
                    "type": "string"
                }
            }
        },
        "api.NotFoundError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "api.Object": {
            "type": "object",
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Block"
                    }
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Detail"
                    }
                },
                "icon_emoji": {
                    "type": "string",
                    "example": "📄"
                },
                "id": {
                    "type": "string",
                    "example": "bafyreie6n5l5nkbjal37su54cha4coy7qzuhrnajluzv5qd5jvtsrxkequ"
                },
                "name": {
                    "type": "string",
                    "example": "Object Name"
                },
                "object_type": {
                    "type": "string",
                    "example": "Page"
                },
                "root_id": {
                    "type": "string"
                },
                "space_id": {
                    "type": "string",
                    "example": "bafyreigyfkt6rbv24sbv5aq2hko3bhmv5xxlf22b4bypdu6j7hnphm3psq.23me69r569oi1"
                },
                "type": {
                    "type": "string",
                    "example": "object"
                }
            }
        },
        "api.ObjectTemplate": {
            "type": "object",
            "properties": {
                "icon_emoji": {
                    "type": "string",
                    "example": "📄"
                },
                "id": {
                    "type": "string",
                    "example": "bafyreictrp3obmnf6dwejy5o4p7bderaaia4bdg2psxbfzf44yya5uutge"
                },
                "name": {
                    "type": "string",
                    "example": "Object Template Name"
                },
                "type": {
                    "type": "string",
                    "example": "object_template"
                }
            }
        },
        "api.ObjectType": {
            "type": "object",
            "properties": {
                "icon_emoji": {
                    "type": "string",
                    "example": "📄"
                },
                "id": {
                    "type": "string",
                    "example": "bafyreigyb6l5szohs32ts26ku2j42yd65e6hqy2u3gtzgdwqv6hzftsetu"
                },
                "name": {
                    "type": "string",
                    "example": "Page"
                },
                "type": {
                    "type": "string",
                    "example": "object_type"
                },
                "unique_key": {
                    "type": "string",
                    "example": "ot-page"
                }
            }
        },
        "api.ServerError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "api.Space": {
            "type": "object",
            "properties": {
                "account_space_id": {
                    "type": "string",
                    "example": "bafyreihpd2knon5wbljhtfeg3fcqtg3i2pomhhnigui6lrjmzcjzep7gcy.23me69r569oi1"
                },
                "archive_object_id": {
                    "type": "string",
                    "example": "bafyreialsgoyflf3etjm3parzurivyaukzivwortf32b4twnlwpwocsrri"
                },
                "device_id": {
                    "type": "string",
                    "example": "12D3KooWGZMJ4kQVyQVXaj7gJPZr3RZ2nvd9M2Eq2pprEoPih9WF"
                },
                "home_object_id": {
                    "type": "string",
                    "example": "bafyreie4qcl3wczb4cw5hrfyycikhjyh6oljdis3ewqrk5boaav3sbwqya"
                },
                "icon": {
                    "type": "string",
                    "example": "data:image/png;base64, \u003cbase64-encoded-image\u003e"
                },
                "id": {
                    "type": "string",
                    "example": "bafyreigyfkt6rbv24sbv5aq2hko3bhmv5xxlf22b4bypdu6j7hnphm3psq.23me69r569oi1"
                },
                "marketplace_workspace_id": {
                    "type": "string",
                    "example": "_anytype_marketplace"
                },
                "name": {
                    "type": "string",
                    "example": "Space Name"
                },
                "network_id": {
                    "type": "string",
                    "example": "N83gJpVd9MuNRZAuJLZ7LiMntTThhPc6DtzWWVjb1M3PouVU"
                },
                "profile_object_id": {
                    "type": "string",
                    "example": "bafyreiaxhwreshjqwndpwtdsu4mtihaqhhmlygqnyqpfyfwlqfq3rm3gw4"
                },
                "space_view_id": {
                    "type": "string",
                    "example": "bafyreigzv3vq7qwlrsin6njoduq727ssnhwd6bgyfj6nm4hv3pxoc2rxhy"
                },
                "tech_space_id": {
                    "type": "string",
                    "example": "bafyreif4xuwncrjl6jajt4zrrfnylpki476nv2w64yf42ovt7gia7oypii.23me69r569oi1"
                },
                "timezone": {
                    "type": "string",
                    "example": ""
                },
                "type": {
                    "type": "string",
                    "example": "space"
                },
                "widgets_id": {
                    "type": "string",
                    "example": "bafyreialj7pceh53mifm5dixlho47ke4qjmsn2uh4wsjf7xq2pnlo5xfva"
                }
            }
        },
        "api.SpaceMember": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "_participant_bafyreigyfkt6rbv24sbv5aq2hko1bhmv5xxlf22b4bypdu6j7hnphm3psq_23me69r569oi1_AAjEaEwPF4nkEh9AWkqEnzcQ8HziBB4ETjiTpvRCQvWnSMDZ"
                },
                "identity": {
                    "type": "string",
                    "example": "AAjEaEwPF4nkEh7AWkqEnzcQ8HziGB4ETjiTpvRCQvWnSMDZ"
                },
                "name": {
                    "type": "string",
                    "example": "Space Member Name"
                },
                "role": {
                    "type": "string",
                    "example": "editor"
                },
                "type": {
                    "type": "string",
                    "example": "space_member"
                }
            }
        },
        "api.Text": {
            "type": "object",
            "properties": {
                "checked": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "icon_emoji": {
                    "type": "string"
                },
                "icon_image": {
                    "type": "string"
                },
                "style": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "api.UnauthorizedError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "api.ValidationError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:31009",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Anytype API",
	Description:      "This API allows interaction with Anytype resources such as spaces, objects, and object types.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
