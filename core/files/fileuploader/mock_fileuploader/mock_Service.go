// Code generated by mockery. DO NOT EDIT.

package mock_fileuploader

import (
	app "github.com/anyproto/any-sync/app"
	fileuploader "github.com/anyproto/anytype-heart/core/files/fileuploader"
	mock "github.com/stretchr/testify/mock"

	objectorigin "github.com/anyproto/anytype-heart/core/domain/objectorigin"
)

// MockService is an autogenerated mock type for the Service type
type MockService struct {
	mock.Mock
}

type MockService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockService) EXPECT() *MockService_Expecter {
	return &MockService_Expecter{mock: &_m.Mock}
}

// Init provides a mock function with given fields: a
func (_m *MockService) Init(a *app.App) error {
	ret := _m.Called(a)

	if len(ret) == 0 {
		panic("no return value specified for Init")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*app.App) error); ok {
		r0 = rf(a)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockService_Init_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Init'
type MockService_Init_Call struct {
	*mock.Call
}

// Init is a helper method to define mock.On call
//   - a *app.App
func (_e *MockService_Expecter) Init(a interface{}) *MockService_Init_Call {
	return &MockService_Init_Call{Call: _e.mock.On("Init", a)}
}

func (_c *MockService_Init_Call) Run(run func(a *app.App)) *MockService_Init_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*app.App))
	})
	return _c
}

func (_c *MockService_Init_Call) Return(err error) *MockService_Init_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *MockService_Init_Call) RunAndReturn(run func(*app.App) error) *MockService_Init_Call {
	_c.Call.Return(run)
	return _c
}

// Name provides a mock function with given fields:
func (_m *MockService) Name() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Name")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockService_Name_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Name'
type MockService_Name_Call struct {
	*mock.Call
}

// Name is a helper method to define mock.On call
func (_e *MockService_Expecter) Name() *MockService_Name_Call {
	return &MockService_Name_Call{Call: _e.mock.On("Name")}
}

func (_c *MockService_Name_Call) Run(run func()) *MockService_Name_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockService_Name_Call) Return(name string) *MockService_Name_Call {
	_c.Call.Return(name)
	return _c
}

func (_c *MockService_Name_Call) RunAndReturn(run func() string) *MockService_Name_Call {
	_c.Call.Return(run)
	return _c
}

// NewUploader provides a mock function with given fields: spaceId, origin
func (_m *MockService) NewUploader(spaceId string, origin objectorigin.ObjectOrigin) fileuploader.Uploader {
	ret := _m.Called(spaceId, origin)

	if len(ret) == 0 {
		panic("no return value specified for NewUploader")
	}

	var r0 fileuploader.Uploader
	if rf, ok := ret.Get(0).(func(string, objectorigin.ObjectOrigin) fileuploader.Uploader); ok {
		r0 = rf(spaceId, origin)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(fileuploader.Uploader)
		}
	}

	return r0
}

// MockService_NewUploader_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewUploader'
type MockService_NewUploader_Call struct {
	*mock.Call
}

// NewUploader is a helper method to define mock.On call
//   - spaceId string
//   - origin objectorigin.ObjectOrigin
func (_e *MockService_Expecter) NewUploader(spaceId interface{}, origin interface{}) *MockService_NewUploader_Call {
	return &MockService_NewUploader_Call{Call: _e.mock.On("NewUploader", spaceId, origin)}
}

func (_c *MockService_NewUploader_Call) Run(run func(spaceId string, origin objectorigin.ObjectOrigin)) *MockService_NewUploader_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(objectorigin.ObjectOrigin))
	})
	return _c
}

func (_c *MockService_NewUploader_Call) Return(_a0 fileuploader.Uploader) *MockService_NewUploader_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockService_NewUploader_Call) RunAndReturn(run func(string, objectorigin.ObjectOrigin) fileuploader.Uploader) *MockService_NewUploader_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockService creates a new instance of MockService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockService {
	mock := &MockService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
